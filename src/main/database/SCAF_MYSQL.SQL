# ************************************************************
# Base de Dados: quaemoco_scaf
# ************************************************************
 

/*--------------------------------------------------------------
| quaemoco_scaf.TB_PERFIL
--------------------------------------------------------------*/ 
CREATE TABLE quaemoco_scaf.TB_PERFIL (
  COD_PERFIL   INTEGER      NOT NULL, 
  NOM_PERFIL   VARCHAR(100) NOT NULL, 
  IND_EXCLUIDO INTEGER      NOT NULL DEFAULT '0',
  PRIMARY KEY (COD_PERFIL)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ; 

INSERT INTO quaemoco_scaf.TB_PERFIL (COD_PERFIL, NOM_PERFIL, IND_EXCLUIDO)
VALUES  (1, 'Master', 0), 
        (2, 'Administrador', 0), 
        (3, 'Usuário', 0);
 
/*--------------------------------------------------------------
| quaemoco_scaf.TB_RECURSO
--------------------------------------------------------------*/ 
CREATE TABLE quaemoco_scaf.TB_RECURSO (
  COD_RECURSO  INTEGER      NOT NULL, 
  NOM_RECURSO  VARCHAR(250) NOT NULL,
  URL_RECURSO  VARCHAR(900) NOT NULL,  
  DAT_CADASTRO TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,  
  IND_EXCLUIDO INTEGER      NOT NULL DEFAULT '0',
  PRIMARY KEY (COD_RECURSO)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ;  

INSERT INTO quaemoco_scaf.TB_RECURSO (COD_RECURSO, NOM_RECURSO, URL_RECURSO, DAT_CADASTRO, IND_EXCLUIDO)
VALUES
  ( 1, 'Atenticacao','/api/token', '2018-08-22 20:56:37', 0), 
  ( 2, 'Usuários','/api/usuarios', '2018-08-22 21:12:20', 0), 
  ( 3, 'perfis','/api/perfis', '2018-08-22 21:12:20', 0),  
  ( 4, 'Recursos','/api/recursos', '2018-08-22 21:12:20', 0),  
  
  (10, 'Pontos','/api/pontos', '2018-08-26 21:36:35', 0),

  (22, 'Grupos','/api/grupos', '2018-09-12 20:46:13', 0),
  (23, 'Categorias','/api/categorias', '2018-09-12 20:46:13', 0),
  (24, 'Períodos','/api/periodos', '2018-09-12 20:46:13', 0), 
  (25, 'Agendamentos','/api/agendamentos', '2018-09-12 20:46:13', 0),
  (26, 'Cartões','/api/cartoes', '2018-09-12 20:46:13', 0),
  (27, 'Lançamentos','/api/lancamentos', '2018-09-12 20:46:13', 0),
  (28, 'Tags','/api/tags', '2018-09-12 20:46:13', 0),
  (29, 'Contatos','/api/contatos', '2018-09-12 20:46:13', 0),
  (30, 'Painel Gerencial','/api/painel-gerencial', '2018-09-12 20:46:13', 0);

/*--------------------------------------------------------------
| RL_PERFIL_RECURSO
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.RL_PERFIL_RECURSO (
  COD_PERFIL  INTEGER     NOT NULL, 
  COD_RECURSO INTEGER     NOT NULL, 
  NOM_METODO  VARCHAR(10) NOT NULL  ,
  PRIMARY KEY (COD_PERFIL, COD_RECURSO, NOM_METODO),
  KEY COD_PERFIL (COD_PERFIL),
  KEY COD_RECURSO (COD_RECURSO)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ;


ALTER TABLE quaemoco_scaf.RL_PERFIL_RECURSO
  ADD CONSTRAINT FK_PERFIL_RECURSO_RECURSO
    FOREIGN KEY (COD_RECURSO)
      REFERENCES quaemoco_scaf.TB_RECURSO (COD_RECURSO);

ALTER TABLE quaemoco_scaf.RL_PERFIL_RECURSO
  ADD CONSTRAINT FK_PERFIL_RECURSO_PERFIL
    FOREIGN KEY (COD_PERFIL)
      REFERENCES quaemoco_scaf.TB_PERFIL (COD_PERFIL); 


SELECT  CONCAT('(', COD_PERFIL, ',', COD_RECURSO, ', ''', NOM_METODO, '''),') AS DADOS
FROM RL_PERFIL_RECURSO

INSERT INTO quaemoco_scaf.RL_PERFIL_RECURSO (COD_PERFIL, COD_RECURSO, NOM_METODO)
VALUES 

  /* TOKEN */
  (2,1, 'GET'),
  (2,1, 'POST'),
  (3,1, 'GET'),
  (3,1, 'POST'),

  /* USUARIOS */
  (2,2, 'DELETE'),
  (2,2, 'GET'),
  (2,2, 'POST'),
  (2,2, 'PUT'),

  /* PERFIS */
  (2,3, 'GET'),

  /* Recusros */ 
  (1,4, 'GET'),
  (2,4, 'GET'),

  /* PONTOS */
  (2,10, 'DELETE'),
  (2,10, 'GET'),
  (2,10, 'POST'),
  (2,10, 'PUT'),
  (3,10, 'DELETE'),
  (3,10, 'GET'),
  (3,10, 'POST'),
  (3,10, 'PUT'),

  /* Grupos */ 
  (2,22, 'GET'),
  (3,22, 'GET'),

  /* Categorias */ 
  (2,23, 'GET'),
  (3,23, 'GET'),


  /* Períodos */ 
  (2,24, 'GET'),
  (3,24, 'GET'),

  /* Agendamentos */ 
  (2,25, 'DELETE'),
  (2,25, 'GET'),
  (2,25, 'POST'),
  (2,25, 'PUT'),
  (3,25, 'DELETE'),
  (3,25, 'GET'),
  (3,25, 'POST'),
  (3,25, 'PUT'),

  /* Cartões */ 
  (2,26, 'DELETE'),
  (2,26, 'GET'),
  (2,26, 'POST'),
  (2,26, 'PUT'),
  (3,26, 'DELETE'),
  (3,26, 'GET'),
  (3,26, 'POST'),
  (3,26, 'PUT'),

  /* Lançamentos */ 
  (2,27, 'DELETE'),
  (2,27, 'GET'),
  (2,27, 'POST'),
  (2,27, 'PUT'),
  (3,27, 'DELETE'),
  (3,27, 'GET'),
  (3,27, 'POST'),
  (3,27, 'PUT'),

  /* Tags */ 
  (2,28, 'DELETE'),
  (2,28, 'GET'),
  (2,28, 'POST'),
  (2,28, 'PUT'),
  (3,28, 'DELETE'),
  (3,28, 'GET'),
  (3,28, 'POST'),
  (3,28, 'PUT'),

  /* Contatos */ 
  (2,29, 'GET'),

  /* Painel Gerencial */ 
  (1,30, 'GET'),
  (2,30, 'GET'),
  (3,30, 'GET');

/*--------------------------------------------------------------
| quaemoco_scaf.TB_USUARIO
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_USUARIO (
  COD_USUARIO     INTEGER      NOT NULL AUTO_INCREMENT,
  COD_PERFIL      INTEGER      NOT NULL, 
  NOM_USUARIO     VARCHAR(50)  NOT NULL ,
  NOM_LOGIN       VARCHAR(250) NOT NULL ,
  DES_SENHA       VARCHAR(100) NOT NULL , 
  DES_EMAIL       VARCHAR(150)     NULL,
  DES_FOTO        BLOB             NULL,
  DAT_CADASTRO    TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP, 
  DAT_ATUALIZACAO TIMESTAMP        NULL,  
  IND_EXCLUIDO    INTEGER      NOT NULL DEFAULT '0',
  PRIMARY KEY (COD_USUARIO),
  KEY COD_PERFIL (COD_PERFIL)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ; 

INSERT INTO quaemoco_scaf.TB_USUARIO (COD_USUARIO, COD_PERFIL, NOM_USUARIO, NOM_LOGIN, DES_SENHA, DES_EMAIL, DES_FOTO, DAT_CADASTRO, DAT_ATUALIZACAO, IND_EXCLUIDO)
VALUES
  (1,2,'Willian Ferreira Maruno','maruno','H4At4cj4XjHXNSRmLOTcgyKooOW0BonJsEO7RAQmCIc=', 'jackmaruno@gmail.com
  (3,2,'Nelson','nrsjnet@gmail.com','JpltizVEETMU7UeGyHDNPt8JHust5cigvArW72yWWqs=', 'nrsjnet@gmail.com',NULL,'2018-08-27 21:40:46','2018-08-27 22:04:08',0);

ALTER TABLE quaemoco_scaf.TB_USUARIO
  ADD CONSTRAINT FK_USUARIO_PERFIL
    FOREIGN KEY (COD_PERFIL)
      REFERENCES quaemoco_scaf.TB_PERFIL (COD_PERFIL);
       


/*--------------------------------------------------------------
| quaemoco_scaf.TB_ACCES_TOKEN
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_ACCES_TOKEN (
  DES_ACCES_TOKEN         VARCHAR(256) NOT NULL,  
  COD_USUARIO             INTEGER      NOT NULL,  
  DES_TIPO_TOKEN          VARCHAR(10)      NULL,
  DES_USER_AGENT          VARCHAR(250)     NULL,
  DES_BROWSER             VARCHAR(250)     NULL,
  DES_VERSAO_BROWSER      VARCHAR(250)     NULL,
  DES_SISTEMA_OPERACIONAL VARCHAR(250)     NULL,
  DES_IP                  VARCHAR(100)     NULL,
  DAT_CADASTRO            TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (DES_ACCES_TOKEN),
  KEY COD_USUARIO (COD_USUARIO)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ;

ALTER TABLE quaemoco_scaf.TB_ACCES_TOKEN
  ADD CONSTRAINT FK_ACCES_TOKEN_USUARIO
    FOREIGN KEY (COD_USUARIO)
      REFERENCES quaemoco_scaf.TB_USUARIO (COD_USUARIO);


/*--------------------------------------------------------------
| VW_PERMISSAO_RECURSO
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
 
CREATE OR REPLACE VIEW quaemoco_scaf.VW_PERMISSAO_RECURSO AS
SELECT CONCAT(COD_RECURSO, '.', NOM_METODO) AS COD_PERMISSAO
     , COD_RECURSO
     , NOM_METODO
FROM quaemoco_scaf.RL_PERFIL_RECURSO
;
/*--------------------------------------------------------------
| VW_PERMISSAO_RECURSO_PERFIL
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
 
CREATE OR REPLACE VIEW quaemoco_scaf.VW_PERMISSAO_RECURSO_PERFIL AS
SELECT DISTINCT 
       CONCAT(COD_RECURSO, '.', NOM_METODO, '.', COD_PERFIL) AS ID 
     , CONCAT(COD_RECURSO, '.', NOM_METODO) AS COD_PERMISSAO 
     , COD_PERFIL 
FROM quaemoco_scaf.RL_PERFIL_RECURSO
;

/*--------------------------------------------------------------
| VW_ACCES_TOKEN
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
 
CREATE OR REPLACE VIEW quaemoco_scaf.VW_ACCES_TOKEN AS
SELECT TOKEN.DES_ACCES_TOKEN
      ,TOKEN.DES_TIPO_TOKEN
      ,RECURSO.COD_RECURSO
      ,RECURSO.URL_RECURSO
      ,RL_RECURSO.NOM_METODO
      ,TOKEN.DES_IP
      ,USUARIO.COD_USUARIO
      ,USUARIO.NOM_USUARIO
      ,USUARIO.NOM_LOGIN
      ,PERFIL.COD_PERFIL
      ,PERFIL.NOM_PERFIL  
FROM quaemoco_scaf.TB_ACCES_TOKEN TOKEN 
  INNER JOIN quaemoco_scaf.TB_USUARIO USUARIO ON USUARIO.COD_USUARIO = TOKEN.COD_USUARIO  
  INNER JOIN quaemoco_scaf.TB_PERFIL PERFIL ON PERFIL.COD_PERFIL = USUARIO.COD_PERFIL
  INNER JOIN quaemoco_scaf.RL_PERFIL_RECURSO RL_RECURSO ON RL_RECURSO.COD_PERFIL = PERFIL.COD_PERFIL 
  INNER JOIN quaemoco_scaf.TB_RECURSO RECURSO ON RECURSO.COD_RECURSO = RL_RECURSO.COD_RECURSO 
  
WHERE RECURSO.IND_EXCLUIDO = 0  
;       
       
 

  




       
 

  




       
 

  




ALTER TABLE quaemoco_scaf.TB_CATEGORIA DROP FOREIGN KEY FK_CATEGORIA_GRUPO ;
ALTER TABLE quaemoco_scaf.TB_AGENDAMENTO DROP FOREIGN KEY FK_AGENDAMENTO_PERIODO;
ALTER TABLE quaemoco_scaf.TB_AGENDAMENTO DROP FOREIGN KEY FK_AGENDAMENTO_CATEGORIA;
ALTER TABLE quaemoco_scaf.TB_LANCAMENTO DROP FOREIGN KEY FK_LANCAMENTO_CATEGORIA ;
ALTER TABLE quaemoco_scaf.TB_LANCAMENTO DROP FOREIGN KEY FK_LANCAMENTO_CARTAO_CREDITO ;
ALTER TABLE quaemoco_scaf.TB_LANCAMENTO DROP FOREIGN KEY FK_LANCAMENTO_AGENDAMENTO;
ALTER TABLE quaemoco_scaf.TB_LANCAMENTO DROP FOREIGN KEY FK_LANCAMENTO_PARCELA;
ALTER TABLE quaemoco_scaf.TB_PARCELA DROP FOREIGN KEY FK_PARCELA_LANCAMENTO ;
ALTER TABLE quaemoco_scaf.RL_LANCAMENTO_PARCELA DROP FOREIGN KEY FK_LANCAMENTO_PARCELA_PARCELA ;
ALTER TABLE quaemoco_scaf.RL_LANCAMENTO_PARCELA DROP FOREIGN KEY FK_LANCAMENTO_PARCELA_LANCAMENTO ;


DROP TABLE IF EXISTS quaemoco_scaf.TB_GRUPO;
DROP TABLE IF EXISTS quaemoco_scaf.TB_CONTATO;
DROP TABLE IF EXISTS quaemoco_scaf.TB_TAG;
DROP TABLE IF EXISTS quaemoco_scaf.TB_PERIODO;
DROP TABLE IF EXISTS quaemoco_scaf.TB_CARTAO_CREDITO;
DROP TABLE IF EXISTS quaemoco_scaf.TB_CATEGORIA;
DROP TABLE IF EXISTS quaemoco_scaf.TB_AGENDAMENTO;
DROP TABLE IF EXISTS quaemoco_scaf.TB_LANCAMENTO;
DROP TABLE IF EXISTS quaemoco_scaf.TB_PARCELA;
DROP TABLE IF EXISTS quaemoco_scaf.RL_LANCAMENTO_PARCELA;





/*--------------------------------------------------------------
| quaemoco_scaf.TB_GRUPO
--------------------------------------------------------------*/ 
CREATE TABLE quaemoco_scaf.TB_GRUPO (
  COD_GRUPO INTEGER      NOT NULL,
  NOM_GRUPO VARCHAR(100) NOT NULL,
  IND_ATIVO INTEGER      NOT NULL DEFAULT 1,
  PRIMARY KEY(COD_GRUPO)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| quaemoco_scaf.TB_CONTATO
--------------------------------------------------------------*/ 
CREATE TABLE quaemoco_scaf.TB_CONTATO (
  COD_CONTATO  INTEGER      NOT NULL AUTO_INCREMENT,
  NOM_CONTATO  VARCHAR(250) NOT NULL,
  NOM_ASSUNTO  VARCHAR(250) NOT NULL,
  DES_EMAIL    VARCHAR(100) NOT NULL,
  DES_MENSAGEM TEXT         NOT NULL,
  DAT_INCLUSAO TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  IND_EXCLUIDO INTEGER      NOT NULL DEFAULT 0,
  PRIMARY KEY(COD_CONTATO)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| quaemoco_scaf.TB_TAG
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_TAG (
  COD_TAG       INTEGER     NOT NULL AUTO_INCREMENT,
  COD_USUARIO   INTEGER     NOT NULL,
  NOM_TAG       VARCHAR(50) NOT NULL,
  DAT_INCLUSAO  TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
  DAT_ALTERACAO TIMESTAMP       NULL,
  IND_EXCLUIDO  INTEGER     NOT NULL DEFAULT 0,
  PRIMARY KEY(COD_TAG)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| quaemoco_scaf.TB_PERIODO
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_PERIODO (
  NUM_PERIODO INTEGER      NOT NULL,
  NOM_PERIODO VARCHAR(100) NOT NULL,
  PRIMARY KEY(NUM_PERIODO)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| quaemoco_scaf.TB_CARTAO_CREDITO
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_CARTAO_CREDITO (
  COD_CARTAO_CREDITO INTEGER      NOT NULL AUTO_INCREMENT,
  COD_USUARIO        INTEGER      NOT NULL,
  NOM_BANDEIRA       VARCHAR(50)  NOT NULL,
  NOM_CARTAO_CREDITO VARCHAR(100) NOT NULL,
  NUM_DIA_VENCIMENTO INTEGER      NOT NULL,
  NUM_DIA_FECHAMENTO INTEGER      NOT NULL,
  DAT_INCLUSAO       TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  DAT_ALTERACAO      TIMESTAMP        NULL,
  IND_ATIVO          INTEGER      NOT NULL DEFAULT 1,
  IND_EXCLUIDO       INTEGER      NOT NULL DEFAULT 0,
  PRIMARY KEY(COD_CARTAO_CREDITO)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| quaemoco_scaf.TB_CATEGORIA
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_CATEGORIA (
  COD_CATEGORIA INTEGER      NOT NULL,
  COD_GRUPO     INTEGER      NOT NULL,
  NOM_CATEGORIA VARCHAR(500) NOT NULL,
  IND_ATIVO     INTEGER      NOT NULL DEFAULT 1,
  PRIMARY KEY(COD_CATEGORIA),
  KEY COD_GRUPO(COD_GRUPO) 
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| quaemoco_scaf.TB_AGENDAMENTO
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_AGENDAMENTO (
  COD_AGENDAMENTO INTEGER      NOT NULL AUTO_INCREMENT,
  COD_USUARIO     INTEGER      NOT NULL,
  COD_CATEGORIA   INTEGER      NOT NULL,
  NUM_PERIODO     INTEGER      NOT NULL,
  NOM_AGENDAMENTO VARCHAR(250) NOT NULL,
  DES_AGENDAMENTO VARCHAR(4000)    NULL,
  DAT_INICIO      DATE         NOT NULL,
  DAT_INCLUSAO    TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  DAT_ALTERACAO   TIMESTAMP        NULL,
  IND_ATIVO       INTEGER      NOT NULL DEFAULT 1,
  IND_EXCLUIDO    INTEGER      NOT NULL DEFAULT 0,
  PRIMARY KEY(COD_AGENDAMENTO),
  KEY COD_CATEGORIA(COD_CATEGORIA),
  KEY NUM_PERIODO(NUM_PERIODO) 
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| quaemoco_scaf.TB_LANCAMENTO
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_LANCAMENTO (
  COD_LANCAMENTO     INTEGER       NOT NULL AUTO_INCREMENT,
  COD_USUARIO        INTEGER       NOT NULL,
  COD_CATEGORIA      INTEGER       NOT NULL,
  COD_AGENDAMENTO    INTEGER           NULL,
  COD_CARTAO_CREDITO INTEGER           NULL,
  COD_PARCELA        INTEGER           NULL,
  COD_TIPO_PAGAMENTO INTEGER       NOT NULL DEFAULT 0,
  DES_TAGS           VARCHAR(4000)     NULL,
  DES_LANCAMENTO     TEXT              NULL,
  VAL_PREVISTO       DECIMAL(26,2) NOT NULL,
  VAL_LANCAMENTO     DECIMAL(26,2) NOT NULL,
  DAT_REFERENCIA     DATE          NOT NULL,
  DAT_LANCAMENTO     TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP,
  DAT_FATURA         DATE              NULL,
  DAT_ALTERACAO      TIMESTAMP         NULL,
  IND_EXCLUIDO       INTEGER       NOT NULL DEFAULT 0,
  PRIMARY KEY(COD_LANCAMENTO),
  KEY COD_CATEGORIA(COD_CATEGORIA),
  KEY COD_CARTAO_CREDITO(COD_CARTAO_CREDITO),
  KEY COD_AGENDAMENTO(COD_AGENDAMENTO),
  KEY COD_PARCELA(COD_PARCELA)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| quaemoco_scaf.TB_PARCELA
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.TB_PARCELA (
  COD_PARCELA    INTEGER       NOT NULL AUTO_INCREMENT,
  COD_LANCAMENTO INTEGER       NOT NULL,
  NUM_PARCELA    INTEGER       NOT NULL,
  VAL_PARCELA    DECIMAL(26,2) NOT NULL,
  DAT_PARCELA    DATE          NOT NULL,
  PRIMARY KEY(COD_PARCELA),
  KEY COD_LANCAMENTO(COD_LANCAMENTO) 
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| RL_LANCAMENTO_PARCELA
--------------------------------------------------------------*/
CREATE TABLE quaemoco_scaf.RL_LANCAMENTO_PARCELA (
  COD_PARCELA    INTEGER NOT NULL,
  COD_LANCAMENTO INTEGER NOT NULL,
  PRIMARY KEY(COD_PARCELA, COD_LANCAMENTO),
  KEY COD_LANCAMENTO(COD_LANCAMENTO),
  KEY COD_PARCELA(COD_PARCELA) 
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*--------------------------------------------------------------
| FK'S
--------------------------------------------------------------*/ 


ALTER TABLE quaemoco_scaf.TB_CATEGORIA ADD CONSTRAINT FK_CATEGORIA_GRUPO FOREIGN KEY (COD_GRUPO) REFERENCES quaemoco_scaf.TB_GRUPO (COD_GRUPO);
ALTER TABLE quaemoco_scaf.TB_AGENDAMENTO ADD CONSTRAINT FK_AGENDAMENTO_PERIODO FOREIGN KEY (NUM_PERIODO) REFERENCES quaemoco_scaf.TB_PERIODO (NUM_PERIODO);
ALTER TABLE quaemoco_scaf.TB_AGENDAMENTO ADD CONSTRAINT FK_AGENDAMENTO_CATEGORIA FOREIGN KEY (COD_CATEGORIA) REFERENCES quaemoco_scaf.TB_CATEGORIA (COD_CATEGORIA);
ALTER TABLE quaemoco_scaf.TB_LANCAMENTO ADD CONSTRAINT FK_LANCAMENTO_CATEGORIA FOREIGN KEY (COD_CATEGORIA) REFERENCES quaemoco_scaf.TB_CATEGORIA (COD_CATEGORIA);
ALTER TABLE quaemoco_scaf.TB_LANCAMENTO ADD CONSTRAINT FK_LANCAMENTO_CARTAO_CREDITO FOREIGN KEY (COD_CARTAO_CREDITO) REFERENCES quaemoco_scaf.TB_CARTAO_CREDITO (COD_CARTAO_CREDITO);
ALTER TABLE quaemoco_scaf.TB_LANCAMENTO ADD CONSTRAINT FK_LANCAMENTO_AGENDAMENTO FOREIGN KEY (COD_AGENDAMENTO) REFERENCES quaemoco_scaf.TB_AGENDAMENTO (COD_AGENDAMENTO);
ALTER TABLE quaemoco_scaf.TB_LANCAMENTO ADD CONSTRAINT FK_LANCAMENTO_PARCELA FOREIGN KEY (COD_PARCELA) REFERENCES quaemoco_scaf.TB_PARCELA (COD_PARCELA);
ALTER TABLE quaemoco_scaf.TB_PARCELA ADD CONSTRAINT FK_PARCELA_LANCAMENTO FOREIGN KEY (COD_LANCAMENTO) REFERENCES quaemoco_scaf.TB_LANCAMENTO (COD_LANCAMENTO);
ALTER TABLE quaemoco_scaf.RL_LANCAMENTO_PARCELA ADD CONSTRAINT FK_LANCAMENTO_PARCELA_PARCELA FOREIGN KEY (COD_PARCELA) REFERENCES quaemoco_scaf.TB_PARCELA (COD_PARCELA);
ALTER TABLE quaemoco_scaf.RL_LANCAMENTO_PARCELA ADD CONSTRAINT FK_LANCAMENTO_PARCELA_LANCAMENTO FOREIGN KEY (COD_LANCAMENTO) REFERENCES quaemoco_scaf.TB_LANCAMENTO (COD_LANCAMENTO);
















/*--------------------------------------------------------------
| VW_FATURAS_CARTOES
--------------------------------------------------------------*/ 
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;

DROP VIEW quaemoco_scaf.VW_FATURAS_CARTOES;
CREATE OR REPLACE VIEW quaemoco_scaf.VW_FATURAS_CARTOES AS

 SELECT COD_CARTAO_CREDITO,    
        COD_USUARIO,  
        STR_TO_DATE(CONCAT(DATE_FORMAT((CURDATE() + INTERVAL -(2) MONTH),'%Y-%m-'), CONCAT((CASE WHEN NUM_DIA_VENCIMENTO < 10 THEN '0' ELSE '' END), NUM_DIA_VENCIMENTO) ), '%Y-%m-%d')  AS DAT_FATURA  
 FROM  TB_CARTAO_CREDITO     
    
 UNION ALL 
 SELECT COD_CARTAO_CREDITO,    
        COD_USUARIO,  
        STR_TO_DATE(CONCAT(DATE_FORMAT((CURDATE() + INTERVAL -(1) MONTH),'%Y-%m-'), CONCAT((CASE WHEN NUM_DIA_VENCIMENTO < 10 THEN '0' ELSE '' END), NUM_DIA_VENCIMENTO) ), '%Y-%m-%d')  AS DAT_FATURA  
 FROM  TB_CARTAO_CREDITO     
    
 UNION ALL 
 SELECT COD_CARTAO_CREDITO,   
        COD_USUARIO,  
        STR_TO_DATE(CONCAT(DATE_FORMAT(CURDATE() ,'%Y-%m-'), CONCAT((CASE WHEN NUM_DIA_VENCIMENTO < 10 THEN '0' ELSE '' END), NUM_DIA_VENCIMENTO) ), '%Y-%m-%d')  AS DAT_FATURA  
 FROM  TB_CARTAO_CREDITO     

 UNION ALL 
 SELECT COD_CARTAO_CREDITO,   
        COD_USUARIO,  
        STR_TO_DATE(CONCAT(DATE_FORMAT((CURDATE() + INTERVAL +(1) MONTH),'%Y-%m-'), CONCAT((CASE WHEN NUM_DIA_VENCIMENTO < 10 THEN '0' ELSE '' END), NUM_DIA_VENCIMENTO) ), '%Y-%m-%d')  AS DAT_FATURA  
 FROM  TB_CARTAO_CREDITO
 ;


/*--------------------------------------------------------------
| VW_FATURAS_DATAS
--------------------------------------------------------------*/ 
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_FATURAS_DATAS;

CREATE OR REPLACE VIEW VW_FATURAS_DATAS AS

SELECT F.COD_USUARIO, 
        F.COD_CARTAO_CREDITO,
        F.DAT_FATURA, 
        L.DAT_REFERENCIA ,  
        L.VAL_LANCAMENTO  
 FROM quaemoco_scaf.VW_FATURAS_CARTOES F 

 LEFT JOIN TB_LANCAMENTO L   
  ON  L.COD_CARTAO_CREDITO = F.COD_CARTAO_CREDITO    
  AND L.DAT_FATURA         = F.DAT_FATURA   
  AND L.COD_CATEGORIA      = 48  
  AND L.IND_EXCLUIDO       = 0 
 
    
/*--------------------------------------------------------------
| VW_RELATORIO
--------------------------------------------------------------*/ 
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_RELATORIO;
CREATE OR REPLACE VIEW VW_RELATORIO AS
     
SELECT LANCAMENTO.COD_USUARIO
     , LANCAMENTO.COD_LANCAMENTO
     , LANCAMENTO.DAT_REFERENCIA
     , LANCAMENTO.DAT_LANCAMENTO
     , DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y/%m') AS ANO_MES
     , (CASE WHEN LANCAMENTO.COD_CATEGORIA = 63 THEN LANCAMENTO.VAL_PREVISTO ELSE LANCAMENTO.VAL_LANCAMENTO END) AS VAL_PREVISTO
     , LANCAMENTO.VAL_LANCAMENTO
     , LANCAMENTO.DES_TAGS
     
     , CATEGORIA.COD_CATEGORIA
     , CATEGORIA.NOM_CATEGORIA
     , GRUPO.COD_GRUPO
     , GRUPO.NOM_GRUPO
     
     , PARCELA.COD_LANCAMENTO          AS COD_LANCAMENTO_PARCELA
     , PARCELA.COD_PARCELA
     , PARCELA.NUM_PARCELA
     , LANCAMENTO_PARCELA.DES_TAGS     AS DES_TAGS_PARCELA
     
     , CATEGORIA_PARCELA.COD_CATEGORIA AS COD_CATEGORIA_PARCELA
     , CATEGORIA_PARCELA.NOM_CATEGORIA AS NOM_CATEGORIA_PARCELA
     , GRUPO_PARCELA.COD_GRUPO         AS COD_GRUPO_PARCELA
     , GRUPO_PARCELA.NOM_GRUPO         AS NOM_GRUPO_PARCELA
     
     , AGENDAMENTO.COD_AGENDAMENTO
     , AGENDAMENTO.NOM_AGENDAMENTO
     
     , CARTAO_CREDITO.COD_CARTAO_CREDITO
     , CONCAT(CARTAO_CREDITO.NOM_BANDEIRA, ' - ', CARTAO_CREDITO.NOM_CARTAO_CREDITO) AS NOM_CARTAO_CREDITO
     
     
     , (CASE WHEN LANCAMENTO.COD_AGENDAMENTO IS NOT NULL THEN 1                  -- 1 Pagamentos Agendados
           WHEN LANCAMENTO.COD_PARCELA     IS NOT NULL THEN 2                  -- 2 Parcelas
           WHEN GRUPO.COD_GRUPO <> 9 AND LANCAMENTO.COD_CATEGORIA <> 48 THEN 3 -- 3 Despesas Gerais
           WHEN GRUPO.COD_GRUPO = 9 THEN 4                                     -- 4 Receitas
           WHEN LANCAMENTO.COD_CATEGORIA = 48 THEN 5                           -- 5 Faturas
           ELSE 3 END                                                          -- 3 Despesas Gerais
        ) AS COD_TIPO

FROM TB_LANCAMENTO LANCAMENTO

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA
  
  INNER JOIN TB_GRUPO GRUPO ON GRUPO.COD_GRUPO = CATEGORIA.COD_GRUPO
  
  LEFT JOIN TB_AGENDAMENTO AGENDAMENTO ON AGENDAMENTO.COD_AGENDAMENTO = LANCAMENTO.COD_AGENDAMENTO
  
  LEFT JOIN TB_PARCELA PARCELA ON PARCELA.COD_PARCELA = LANCAMENTO.COD_PARCELA
  
  LEFT JOIN TB_LANCAMENTO LANCAMENTO_PARCELA ON LANCAMENTO_PARCELA.COD_LANCAMENTO = PARCELA.COD_LANCAMENTO
  
  LEFT JOIN TB_CATEGORIA CATEGORIA_PARCELA ON CATEGORIA_PARCELA.COD_CATEGORIA = LANCAMENTO_PARCELA.COD_CATEGORIA
  
  LEFT JOIN TB_GRUPO GRUPO_PARCELA ON GRUPO_PARCELA.COD_GRUPO = CATEGORIA_PARCELA.COD_GRUPO
  
  LEFT JOIN TB_CARTAO_CREDITO CARTAO_CREDITO ON CARTAO_CREDITO.COD_CARTAO_CREDITO = LANCAMENTO.COD_CARTAO_CREDITO

WHERE LANCAMENTO.DAT_REFERENCIA >= CAST(DATE_FORMAT((CURDATE() + INTERVAL -(12) MONTH),'%Y-%m-01') AS DATE) 
AND LANCAMENTO.IND_EXCLUIDO = 0
AND LANCAMENTO.COD_TIPO_PAGAMENTO = 1
ORDER BY ANO_MES 
        ,(CASE WHEN LANCAMENTO.COD_PARCELA IS NOT NULL THEN GRUPO_PARCELA.NOM_GRUPO ELSE GRUPO.NOM_GRUPO END)
        ,(CASE WHEN LANCAMENTO.COD_PARCELA IS NOT NULL THEN CATEGORIA_PARCELA.NOM_CATEGORIA ELSE CATEGORIA.NOM_CATEGORIA END)
        , LANCAMENTO.DAT_REFERENCIA
;
  
  
/*--------------------------------------------------------------
| VW_ULTIMAS_ATIVIDADES
--------------------------------------------------------------*/ 
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_ULTIMAS_ATIVIDADES;
CREATE OR REPLACE VIEW VW_ULTIMAS_ATIVIDADES AS

SELECT LANCAMENTO.COD_USUARIO
     , LANCAMENTO.COD_LANCAMENTO 
     , DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y/%m') AS ANO_MES
     , LANCAMENTO.DAT_REFERENCIA 
     , LANCAMENTO.DAT_LANCAMENTO 
     , TIMESTAMPDIFF(DAY,LANCAMENTO.DAT_LANCAMENTO, NOW()) AS NUM_DIAS
     , TIMESTAMPDIFF(HOUR,LANCAMENTO.DAT_LANCAMENTO, NOW()) AS NUM_HORAS
     , TIMESTAMPDIFF(MINUTE,LANCAMENTO.DAT_LANCAMENTO, NOW()) AS NUM_MINUTOS
     ,(CASE WHEN LANCAMENTO.COD_CARTAO_CREDITO IS NOT NULL AND LANCAMENTO.COD_CATEGORIA <> 48 THEN LANCAMENTO.VAL_PREVISTO ELSE LANCAMENTO.VAL_LANCAMENTO END) AS VAL_LANCAMENTO
     
     
     ,CASE WHEN LANCAMENTO.COD_AGENDAMENTO IS NOT NULL 
          THEN CONCAT(CATEGORIA.NOM_CATEGORIA, ' (', AGENDAMENTO.NOM_AGENDAMENTO,')')
           WHEN LANCAMENTO.COD_PARCELA IS NOT NULL 
              THEN CONCAT('PARCELA N ', PARCELA.NUM_PARCELA,' (', CATEGORIA_PARCELA.NOM_CATEGORIA, ')') 
           WHEN LANCAMENTO.COD_CARTAO_CREDITO IS NOT NULL AND LANCAMENTO.COD_CATEGORIA = 48 
              THEN CONCAT(CATEGORIA.NOM_CATEGORIA, '(', CARTAO_CREDITO.NOM_BANDEIRA, ' - ', CARTAO_CREDITO.NOM_CARTAO_CREDITO, ')')
           ELSE CATEGORIA.NOM_CATEGORIA END
     AS DES_CATEGORIA
   
FROM TB_LANCAMENTO LANCAMENTO 

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA 
  
  LEFT JOIN TB_AGENDAMENTO AGENDAMENTO ON AGENDAMENTO.COD_AGENDAMENTO = LANCAMENTO.COD_AGENDAMENTO 
  
  LEFT JOIN TB_CARTAO_CREDITO CARTAO_CREDITO ON CARTAO_CREDITO.COD_CARTAO_CREDITO = LANCAMENTO.COD_CARTAO_CREDITO 
  
  LEFT JOIN TB_PARCELA PARCELA ON PARCELA.COD_PARCELA = LANCAMENTO.COD_PARCELA 
  
  LEFT JOIN TB_LANCAMENTO LANCAMENTO_PARCELA ON LANCAMENTO_PARCELA.COD_LANCAMENTO = PARCELA.COD_LANCAMENTO
  
  LEFT JOIN TB_CATEGORIA CATEGORIA_PARCELA ON CATEGORIA_PARCELA.COD_CATEGORIA = LANCAMENTO_PARCELA.COD_CATEGORIA

ORDER BY ANO_MES, LANCAMENTO.DAT_LANCAMENTO, DES_CATEGORIA;


/*--------------------------------------------------------------
| VW_MEDIA_AGENDAMENTOS
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_MEDIA_AGENDAMENTOS;
CREATE OR REPLACE VIEW VW_MEDIA_AGENDAMENTOS AS 

SELECT COD_AGENDAMENTO
      ,COUNT(0) AS NUM_QTD
      ,SUM(VAL_LANCAMENTO) AS VAL_TOTAL
      ,ROUND((SUM(VAL_LANCAMENTO) / COUNT(0)),2) AS VAL_MEDIA

FROM TB_LANCAMENTO

WHERE COD_AGENDAMENTO IS NOT NULL 
AND DAT_REFERENCIA BETWEEN CAST(DATE_FORMAT((CURDATE() + INTERVAL -(3) MONTH),'%Y-%m-01') AS DATE)
AND CAST(DATE_FORMAT(CURDATE(),'%Y-%m-01') AS DATE)

GROUP BY COD_AGENDAMENTO

;

/*--------------------------------------------------------------
| VW_AGENDAMENTOS
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_AGENDAMENTOS;
CREATE OR REPLACE VIEW VW_AGENDAMENTOS AS 

SELECT AGENDAMENTO.COD_USUARIO 
     , PERIODO.NOM_PERIODO
     , AGENDAMENTO.COD_AGENDAMENTO 
     , AGENDAMENTO.NOM_AGENDAMENTO 
     , LANCAMENTO.DAT_REFERENCIA AS DAT_PAGAMENTO
     , LANCAMENTO.VAL_LANCAMENTO AS VAL_PAGO
     , GRUPO.COD_GRUPO
     , GRUPO.NOM_GRUPO
     , CATEGORIA.COD_CATEGORIA AS COD_CATEGORIA
     , CONCAT(CATEGORIA.NOM_CATEGORIA, ' (', AGENDAMENTO.NOM_AGENDAMENTO, ')') AS DES_CATEGORIA
     , (CASE WHEN ISNULL(VW.VAL_MEDIA) THEN 0.00 ELSE VW.VAL_MEDIA END) AS VAL_PREVISTO
   
     , (AGENDAMENTO.DAT_INICIO + interval (PERIODO.NUM_PERIODO * ROUND((period_diff(DATE_FORMAT(CURDATE(),'%Y%m'),DATE_FORMAT(AGENDAMENTO.DAT_INICIO,'%Y%m')) / PERIODO.NUM_PERIODO),0)) month) AS DAT_PREVISTA
   
     ,timestampdiff(DAY,now(),(AGENDAMENTO.DAT_INICIO + interval (PERIODO.NUM_PERIODO * ROUND((period_diff(DATE_FORMAT(CURDATE(),'%Y%m'),DATE_FORMAT(AGENDAMENTO.DAT_INICIO,'%Y%m')) / PERIODO.NUM_PERIODO),0)) month)) AS DIAS
   
   
FROM TB_AGENDAMENTO AGENDAMENTO  

  INNER JOIN TB_CATEGORIA CATEGORIA on CATEGORIA.COD_CATEGORIA = AGENDAMENTO.COD_CATEGORIA 

  INNER JOIN TB_GRUPO GRUPO on GRUPO.COD_GRUPO = CATEGORIA.COD_GRUPO 
  
  INNER JOIN TB_PERIODO PERIODO on PERIODO.NUM_PERIODO = AGENDAMENTO.NUM_PERIODO 
  
  LEFT JOIN TB_LANCAMENTO LANCAMENTO 
    on LANCAMENTO.COD_AGENDAMENTO = AGENDAMENTO.COD_AGENDAMENTO  
    AND DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
    AND LANCAMENTO.COD_LANCAMENTO = (
      SELECT max(L2.COD_LANCAMENTO) 
      FROM TB_LANCAMENTO L2 
      WHERE L2.COD_AGENDAMENTO = AGENDAMENTO.COD_AGENDAMENTO 
      AND DATE_FORMAT(L2.DAT_REFERENCIA,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
    )
    
    LEFT JOIN VW_MEDIA_AGENDAMENTOS VW on VW.COD_AGENDAMENTO = AGENDAMENTO.COD_AGENDAMENTO 
    

WHERE AGENDAMENTO.IND_ATIVO = 1 
and DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT((AGENDAMENTO.DAT_INICIO + interval (PERIODO.NUM_PERIODO * ROUND((period_diff(DATE_FORMAT(CURDATE(),'%Y%m'),DATE_FORMAT(AGENDAMENTO.DAT_INICIO,'%Y%m')) / PERIODO.NUM_PERIODO),0)) month),'%Y%m') 
    
    
    
ORDER BY DAT_PREVISTA, DES_CATEGORIA

;


/*--------------------------------------------------------------
| VW_PARCELAS
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_PARCELAS;

CREATE OR REPLACE VIEW VW_PARCELAS AS 

SELECT LANCAMENTO.COD_USUARIO 
     , PARCELA.COD_PARCELA 
     , PARCELA.DAT_PARCELA AS DAT_PREVISTA
     , PARCELA.VAL_PARCELA AS VAL_PREVISTO
     , DATE_FORMAT(PARCELA.DAT_PARCELA,'%Y%m') AS COMPETENCIA
   , LANCAMENTO_PAGAMENTO.DAT_REFERENCIA AS DAT_PAGAMENTO
     , LANCAMENTO_PAGAMENTO.VAL_LANCAMENTO AS VAL_PAGO
     , timestampdiff(DAY,now(),PARCELA.DAT_PARCELA) AS DIAS
     , GRUPO.COD_GRUPO
     , GRUPO.NOM_GRUPO
     , 46 AS COD_CATEGORIA
     , CONCAT('Parcela ', PARCELA.NUM_PARCELA, ' (', CATEGORIA.NOM_CATEGORIA, ')') AS DES_CATEGORIA
   
FROM TB_PARCELA PARCELA

  INNER JOIN TB_LANCAMENTO LANCAMENTO ON LANCAMENTO.COD_LANCAMENTO = PARCELA.COD_LANCAMENTO
  
  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA

  INNER JOIN TB_GRUPO GRUPO on GRUPO.COD_GRUPO = CATEGORIA.COD_GRUPO 
  
  INNER JOIN TB_LANCAMENTO LANCAMENTO_PAGAMENTO ON LANCAMENTO_PAGAMENTO.COD_PARCELA = PARCELA.COD_PARCELA

WHERE ISNULL(LANCAMENTO.COD_CARTAO_CREDITO)
AND ( DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT(PARCELA.DAT_PARCELA,'%Y%m')
    OR ((PARCELA.DAT_PARCELA < CONCAT(DATE_FORMAT(CURDATE(),'%Y-%m'),'-01')) AND ISNULL(LANCAMENTO_PAGAMENTO.DAT_REFERENCIA))
    )
;
 

/*--------------------------------------------------------------
| VW_PARCELAS_SEM_FATURA
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_PARCELAS_SEM_FATURA;
CREATE OR REPLACE VIEW VW_PARCELAS_SEM_FATURA AS 
SELECT LANCAMENTO.COD_USUARIO 
     , LANCAMENTO.COD_CARTAO_CREDITO 
     , PARCELA.COD_PARCELA 
     , CARTAO_CREDITO.NOM_BANDEIRA 
     , CARTAO_CREDITO.NOM_CARTAO_CREDITO
     , CATEGORIA.NOM_CATEGORIA 
     , PARCELA.DAT_PARCELA 
     , PARCELA.VAL_PARCELA  
   
FROM TB_PARCELA PARCELA

  INNER JOIN TB_LANCAMENTO LANCAMENTO ON LANCAMENTO.COD_LANCAMENTO = PARCELA.COD_LANCAMENTO
  
  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA
  
  INNER JOIN TB_CARTAO_CREDITO CARTAO_CREDITO ON CARTAO_CREDITO.COD_CARTAO_CREDITO = LANCAMENTO.COD_CARTAO_CREDITO
  
  LEFT JOIN TB_LANCAMENTO LANCAMENTO_PARCELA ON LANCAMENTO_PARCELA.COD_LANCAMENTO = PARCELA.COD_LANCAMENTO
  
  LEFT JOIN RL_LANCAMENTO_PARCELA RL on RL.COD_PARCELA = PARCELA.COD_PARCELA 
  

WHERE ISNULL(RL.COD_PARCELA)

;


/*--------------------------------------------------------------
| VW_FATURAS
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_FATURAS;
CREATE OR REPLACE VIEW VW_FATURAS AS 

SELECT LANCAMENTO.COD_USUARIO 
     , CARTAO_CREDITO.COD_CARTAO_CREDITO 
     , CARTAO_CREDITO.NOM_BANDEIRA 
     , CARTAO_CREDITO.NOM_CARTAO_CREDITO
     , LANCAMENTO.DAT_FATURA 
     , LANCAMENTO.DAT_REFERENCIA 
     , LANCAMENTO.VAL_PREVISTO 
     , LANCAMENTO.VAL_LANCAMENTO
     , COUNT(PARCELA.COD_PARCELA) AS QTD_PARCELAS
     , SUM(PARCELA.VAL_PARCELA) AS VAL_PARCELAS
   
FROM TB_LANCAMENTO LANCAMENTO

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA

  INNER JOIN TB_CARTAO_CREDITO CARTAO_CREDITO ON CARTAO_CREDITO.COD_CARTAO_CREDITO = LANCAMENTO.COD_CARTAO_CREDITO
  
  INNER JOIN RL_LANCAMENTO_PARCELA RL on RL.COD_LANCAMENTO = LANCAMENTO.COD_LANCAMENTO 
  
  INNER JOIN TB_PARCELA PARCELA on PARCELA.COD_PARCELA = RL.COD_PARCELA 
   
WHERE LANCAMENTO.COD_CATEGORIA = 48

GROUP BY   LANCAMENTO.COD_USUARIO 
       , CARTAO_CREDITO.COD_CARTAO_CREDITO 
       , CARTAO_CREDITO.NOM_BANDEIRA 
       , CARTAO_CREDITO.NOM_CARTAO_CREDITO
       , LANCAMENTO.DAT_FATURA 
       , LANCAMENTO.DAT_REFERENCIA 
       , LANCAMENTO.VAL_PREVISTO 
       , LANCAMENTO.VAL_LANCAMENTO
;


/*--------------------------------------------------------------
| VW_FATURAS_PREVISTAS_REALIZADAS
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_FATURAS_PREVISTAS_REALIZADAS;
CREATE OR REPLACE VIEW VW_FATURAS_PREVISTAS_REALIZADAS AS 


SELECT FATURAS_DATAS.COD_USUARIO 
     , FATURAS_DATAS.COD_CARTAO_CREDITO 
     , CARTAO_CREDITO.NOM_BANDEIRA 
     , CARTAO_CREDITO.NOM_CARTAO_CREDITO
     , FATURAS_DATAS.DAT_FATURA 
     , FATURAS.DAT_REFERENCIA
     , FATURAS.VAL_LANCAMENTO 
     
     ,ROUND(SUM((CASE WHEN ISNULL(PARCELAS_SEM_FATURA.VAL_PARCELA) THEN 0 ELSE PARCELAS_SEM_FATURA.VAL_PARCELA END)),2) AS VAL_PARCELAS_PENDENTES
     ,COUNT(PARCELAS_SEM_FATURA.COD_PARCELA) AS QTD_PARCELAS_PENDENTES
   
   
FROM VW_FATURAS_DATAS FATURAS_DATAS 

  INNER JOIN TB_CARTAO_CREDITO CARTAO_CREDITO ON CARTAO_CREDITO.COD_CARTAO_CREDITO = FATURAS_DATAS.COD_CARTAO_CREDITO
  
  LEFT JOIN VW_PARCELAS_SEM_FATURA PARCELAS_SEM_FATURA 
    ON  PARCELAS_SEM_FATURA.COD_CARTAO_CREDITO = FATURAS_DATAS.COD_CARTAO_CREDITO
    AND PARCELAS_SEM_FATURA.DAT_PARCELA        = FATURAS_DATAS.DAT_FATURA 
  
  LEFT JOIN VW_FATURAS FATURAS
    ON  FATURAS.COD_CARTAO_CREDITO = FATURAS_DATAS.COD_CARTAO_CREDITO
    AND FATURAS.DAT_FATURA         = FATURAS_DATAS.DAT_FATURA
  
GROUP BY   FATURAS_DATAS.COD_USUARIO 
       , FATURAS_DATAS.COD_CARTAO_CREDITO 
       , CARTAO_CREDITO.NOM_BANDEIRA 
       , CARTAO_CREDITO.NOM_CARTAO_CREDITO
       , FATURAS_DATAS.DAT_FATURA 
       , FATURAS.DAT_REFERENCIA
       , FATURAS.VAL_LANCAMENTO

ORDER BY FATURAS_DATAS.DAT_FATURA, FATURAS_DATAS.COD_CARTAO_CREDITO

;


/*--------------------------------------------------------------
| VW_PROXIMAS_ATIVIDADES
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_PROXIMAS_ATIVIDADES;
 
CREATE OR REPLACE VIEW VW_PROXIMAS_ATIVIDADES AS 

SELECT CONCAT(COD_USUARIO, '.', DAT_PREVISTA, '.AGENDAMENTO.', COD_AGENDAMENTO, '.', COD_CATEGORIA) AS ID
     , COD_USUARIO 
     , DAT_PREVISTA 
     , COD_AGENDAMENTO 
     , NULL AS COD_PARCELA
     , NULL AS COD_CARTAO_CREDITO
     , NOM_AGENDAMENTO AS NOME
     , COD_GRUPO
     , NOM_GRUPO
     , COD_CATEGORIA 
     , DES_CATEGORIA 
     , VAL_PREVISTO  
     , DIAS 
FROM VW_AGENDAMENTOS 
WHERE ISNULL(DAT_PAGAMENTO) 

UNION ALL 

SELECT CONCAT(COD_USUARIO, '.', DAT_PREVISTA, '.PARCELA.', COD_PARCELA, '.', COD_CATEGORIA) AS ID
      , COD_USUARIO 
      , DAT_PREVISTA 
      , NULL AS COD_AGENDAMENTO
      , COD_PARCELA 
      , NULL AS COD_CARTAO_CREDITO
      , NULL AS NOME 
      , COD_GRUPO
      , NOM_GRUPO
      , COD_CATEGORIA 
      , DES_CATEGORIA 
      , VAL_PREVISTO  
      , DIAS 
FROM VW_PARCELAS 
WHERE ISNULL(DAT_PAGAMENTO)  

UNION ALL 

SELECT CONCAT(FATURAS.COD_USUARIO, '.', FATURAS.DAT_FATURA, '.FATURA.', FATURAS.COD_CARTAO_CREDITO, '.', CATEGORIA.COD_CATEGORIA) AS ID
      , FATURAS.COD_USUARIO  
      ,FATURAS.DAT_FATURA 
      ,NULL AS COD_AGENDAMENTO
      ,NULL AS COD_PARCELA
      ,FATURAS.COD_CARTAO_CREDITO 
      ,CONCAT(FATURAS.NOM_BANDEIRA,' - ', FATURAS.NOM_CARTAO_CREDITO) AS NOME
     , GRUPO.COD_GRUPO
     , GRUPO.NOM_GRUPO
      ,CATEGORIA.COD_CATEGORIA  
      ,CONCAT(CATEGORIA.NOM_CATEGORIA, '(', FATURAS.NOM_BANDEIRA, ' - ', FATURAS.NOM_CARTAO_CREDITO, ')') AS DES_CATEGORIA 
      ,FATURAS.VAL_PARCELAS_PENDENTES AS VAL_PREVISTO 
      ,timestampdiff(DAY,now(),FATURAS.DAT_FATURA) AS DIAS 
      
      
FROM VW_FATURAS_PREVISTAS_REALIZADAS FATURAS

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = 48
  INNER JOIN TB_GRUPO GRUPO on GRUPO.COD_GRUPO = CATEGORIA.COD_GRUPO 
  
  
WHERE ISNULL(FATURAS.DAT_REFERENCIA) 
AND (
  DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT(FATURAS.DAT_FATURA,'%Y%m')
  OR (
     FATURAS.DAT_FATURA < CONCAT(DATE_FORMAT(CURDATE(),'%Y-%m'),'-01') AND ISNULL(FATURAS.DAT_REFERENCIA)
  )
) 
AND FATURAS.QTD_PARCELAS_PENDENTES > 0


ORDER BY DAT_PREVISTA,DES_CATEGORIA

;



/*--------------------------------------------------------------
| VW_LANCAMENTOS
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_LANCAMENTOS;
 
CREATE OR REPLACE VIEW VW_LANCAMENTOS AS 


SELECT COD_USUARIO 
     , 'Agendamentos' AS DES_LANCAMENTOS
     , 1 AS COD_TIPO
     , SUM((CASE WHEN ISNULL(VAL_PREVISTO) THEN 0 ELSE VAL_PREVISTO END)) AS VAL_PREVISTO
     , SUM((CASE WHEN ISNULL(VAL_PAGO) THEN 0 ELSE VAL_PAGO END)) AS VAL_PAGO
FROM VW_AGENDAMENTOS 
WHERE (DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT(DAT_PREVISTA,'%Y%m')) 
GROUP BY COD_USUARIO 

UNION ALL 

SELECT COD_USUARIO
    , 'Parcelas' AS DES_LANCAMENTOS
    , 2 AS COD_TIPO
    , SUM((CASE WHEN ISNULL(VAL_PREVISTO) THEN 0 ELSE VAL_PREVISTO END)) AS VAL_PREVISTO
    , SUM(VAL_PAGO) AS VAL_PAGO 
FROM VW_PARCELAS 
WHERE (DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT(DAT_PREVISTA,'%Y%m')) 
GROUP BY COD_USUARIO 

UNION ALL 

SELECT LANCAMENTO.COD_USUARIO
     , 'Despesas Gerais' AS DES_LANCAMENTOS
     , 3 AS COD_TIPO
     , SUM((CASE WHEN ISNULL(LANCAMENTO.VAL_PREVISTO) THEN 0 ELSE LANCAMENTO.VAL_PREVISTO END)) AS VAL_PREVISTO
     , SUM(LANCAMENTO.VAL_LANCAMENTO) AS VAL_PAGO 
FROM TB_LANCAMENTO LANCAMENTO

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA
  
WHERE ISNULL(LANCAMENTO.COD_AGENDAMENTO) 
AND ISNULL(LANCAMENTO.COD_PARCELA) 
AND CATEGORIA.COD_GRUPO <> 9
AND CATEGORIA.COD_CATEGORIA <> 48
AND (DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y%m')) 
GROUP BY LANCAMENTO.COD_USUARIO 

UNION ALL 

SELECT LANCAMENTO.COD_USUARIO
     , 'Receitas' AS DES_LANCAMENTOS
     , 4 AS COD_TIPO
     , SUM((CASE WHEN ISNULL(LANCAMENTO.VAL_PREVISTO) THEN 0 ELSE LANCAMENTO.VAL_PREVISTO END)) AS VAL_PREVISTO
     , SUM(LANCAMENTO.VAL_LANCAMENTO) AS VAL_PAGO 
     
FROM TB_LANCAMENTO LANCAMENTO

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA
  
WHERE ISNULL(LANCAMENTO.COD_AGENDAMENTO) 
AND ISNULL(LANCAMENTO.COD_PARCELA) 
AND CATEGORIA.COD_GRUPO = 9
AND (DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y%m')) 
GROUP BY LANCAMENTO.COD_USUARIO 

UNION ALL 

SELECT LANCAMENTO.COD_USUARIO
     , 'Faturas' AS DES_LANCAMENTOS
     , 5 AS COD_TIPO
     , SUM((CASE WHEN ISNULL(LANCAMENTO.VAL_PREVISTO) THEN 0 ELSE LANCAMENTO.VAL_PREVISTO END)) AS VAL_PREVISTO
     , SUM(LANCAMENTO.VAL_LANCAMENTO) AS VAL_PAGO 
FROM TB_LANCAMENTO LANCAMENTO 

WHERE ISNULL(LANCAMENTO.COD_AGENDAMENTO) 
AND ISNULL(LANCAMENTO.COD_PARCELA) 
AND (LANCAMENTO.COD_CARTAO_CREDITO IS NOT NULL) 
AND (LANCAMENTO.COD_CATEGORIA = 48) 
AND DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y%m')

GROUP BY LANCAMENTO.COD_USUARIO




/*--------------------------------------------------------------
| VW_RESUMO_MES
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_RESUMO_MES;
 
CREATE OR REPLACE VIEW VW_RESUMO_MES AS 

SELECT CONCAT(COD_USUARIO, '.', COD_TIPO) AS ID 
     , COD_USUARIO 
     , DES_LANCAMENTOS 
     , COD_TIPO
     , (CASE WHEN ISNULL(VAL_PREVISTO) THEN 0 ELSE VAL_PREVISTO END) AS VAL_PREVISTO
     , (CASE WHEN ISNULL(VAL_PAGO) THEN 0 ELSE VAL_PAGO END) AS VAL_PAGO
FROM VW_LANCAMENTOS
;

/*--------------------------------------------------------------
| VW_DESPESAS_RECEITAS
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_DESPESAS_RECEITAS;
 
CREATE OR REPLACE VIEW VW_DESPESAS_RECEITAS AS 

SELECT LANCAMENTO.COD_USUARIO 
     , cast(DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') AS date) AS DAT_COMPETENCIA
     , ROUND(SUM(LANCAMENTO.VAL_PREVISTO),2) AS VAL_DESPESA_PREVISTA
     , ROUND(SUM(LANCAMENTO.VAL_LANCAMENTO),2) AS VAL_DESPESA_PAGA
     , 0 AS VAL_RECEITA_PREVISTA
     , 0 AS VAL_RECEITA_PAGA
FROM TB_LANCAMENTO LANCAMENTO 

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA
  
WHERE CATEGORIA.COD_GRUPO <> 9
and (LANCAMENTO.DAT_REFERENCIA between cast(DATE_FORMAT((CURDATE() + interval -(12) month),'%Y-%m-01') AS date) AND cast(DATE_FORMAT(CURDATE(),'%Y-%m-01') AS date))
GROUP BY LANCAMENTO.COD_USUARIO
       , cast(DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') AS date) 

UNION ALL 

SELECT LANCAMENTO.COD_USUARIO 
     , cast(DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') AS date) AS DAT_COMPETENCIA
     , 0 AS VAL_DESPESA_PREVISTA
     , 0 AS VAL_DESPESA_PAGA
     , ROUND(SUM(LANCAMENTO.VAL_PREVISTO),2) AS VAL_RECEITA_PREVISTA
     , ROUND(SUM(LANCAMENTO.VAL_LANCAMENTO),2) AS VAL_RECEITA_PAGA 
FROM TB_LANCAMENTO LANCAMENTO 

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA
  
WHERE CATEGORIA.COD_GRUPO = 9

and (LANCAMENTO.DAT_REFERENCIA between cast(DATE_FORMAT((CURDATE() + interval -(12) month),'%Y-%m-01') AS date) AND cast(DATE_FORMAT(CURDATE(),'%Y-%m-01') AS date)) 

GROUP BY LANCAMENTO.COD_USUARIO
       , cast(DATE_FORMAT(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') AS date)

;

/*--------------------------------------------------------------
| VW_ATIVIDADES_MESES
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_ATIVIDADES_MESES;
 
CREATE OR REPLACE VIEW VW_ATIVIDADES_MESES AS 

SELECT CONCAT(COD_USUARIO, DAT_COMPETENCIA) AS ID
     , COD_USUARIO 
     , DAT_COMPETENCIA
     , ROUND(SUM(VAL_DESPESA_PAGA),2) AS VAL_DESPESA_PAGA
     , ROUND(SUM(VAL_RECEITA_PAGA),2) AS VAL_RECEITA_PAGA 
FROM VW_DESPESAS_RECEITAS 
GROUP BY CONCAT(COD_USUARIO, DAT_COMPETENCIA)
       , COD_USUARIO 
       , DAT_COMPETENCIA
  
;

/*--------------------------------------------------------------
| VW_AGENDA_ATUAL
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_AGENDA_ATUAL;
 
CREATE OR REPLACE VIEW VW_AGENDA_ATUAL AS 
SELECT CONCAT(COD_USUARIO, DAT_PREVISTA, 'AGENDAMENTO', COD_AGENDAMENTO, COD_CATEGORIA) AS ID 
     , COD_USUARIO 
     , DAT_PREVISTA 
     , COD_AGENDAMENTO 
     , NULL AS COD_PARCELA
     , NULL AS COD_CARTAO_CREDITO
     , COD_CATEGORIA 
     , DES_CATEGORIA 
     , VAL_PREVISTO 
     , DAT_PAGAMENTO 
     , VAL_PAGO 
FROM VW_AGENDAMENTOS 

UNION ALL 

SELECT CONCAT(COD_USUARIO, DAT_PREVISTA, 'PARCELA', COD_PARCELA, COD_CATEGORIA) AS ID 
     , COD_USUARIO 
     , DAT_PREVISTA 
     , NULL AS COD_AGENDAMENTO
     , COD_PARCELA 
     , NULL AS COD_CARTAO_CREDITO
     , COD_CATEGORIA 
     , DES_CATEGORIA 
     , VAL_PREVISTO 
     , DAT_PAGAMENTO 
     , VAL_PAGO 
FROM VW_PARCELAS 

UNION ALL 

SELECT CONCAT(COD_USUARIO, FATURAS.DAT_FATURA, 'PARCELA', FATURAS.COD_CARTAO_CREDITO, CATEGORIA.COD_CATEGORIA) AS ID 
     , COD_USUARIO 
     , FATURAS.DAT_FATURA AS DAT_PREVISTA
     , NULL AS COD_AGENDAMENTO
     , NULL AS COD_PARCELA
     , FATURAS.COD_CARTAO_CREDITO 
      ,CATEGORIA.COD_CATEGORIA 
      ,CONCAT(CATEGORIA.NOM_CATEGORIA, '(', FATURAS.NOM_BANDEIRA, ' - ', FATURAS.NOM_CARTAO_CREDITO, ')') AS DES_CATEGORIA
     , FATURAS.VAL_PARCELAS_PENDENTES AS VAL_PREVISTO
     , FATURAS.DAT_REFERENCIA AS DAT_PAGAMENTO
     , FATURAS.VAL_LANCAMENTO AS VAL_PAGO 
     
FROM VW_FATURAS_PREVISTAS_REALIZADAS FATURAS
  
  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = CATEGORIA.COD_CATEGORIA = 48
  

WHERE (DATE_FORMAT(CURDATE(),'%Y%m') = DATE_FORMAT(FATURAS.DAT_FATURA,'%Y%m')) 
  or ((FATURAS.DAT_FATURA < CONCAT(DATE_FORMAT(CURDATE(),'%Y-%m'),'-01')) AND ISNULL(FATURAS.DAT_REFERENCIA))

ORDER BY DAT_PREVISTA,DES_CATEGORIA;



/*--------------------------------------------------------------
| VW_RELACAO_LANCAMENTO
--------------------------------------------------------------*/
SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;
DROP VIEW VW_RELACAO_LANCAMENTO;
 
CREATE OR REPLACE VIEW VW_RELACAO_LANCAMENTO AS 

SELECT LANCAMENTO.COD_USUARIO 
     , LANCAMENTO.COD_LANCAMENTO 
     , PARCELA.COD_LANCAMENTO AS COD_LANCAMENTO_PARCELA
     , DATE_FORMAT(LANCAMENTO.DAT_LANCAMENTO,'%Y/%m') AS ANO_MES
     
     , (CASE WHEN LANCAMENTO.COD_AGENDAMENTO IS NOT NULL THEN 1                  -- 1 Pagamentos Agendados
           WHEN LANCAMENTO.COD_PARCELA     IS NOT NULL THEN 2                  -- 2 Parcelas
           WHEN GRUPO.COD_GRUPO <> 9 AND LANCAMENTO.COD_CATEGORIA <> 48 THEN 3 -- 3 Despesas Gerais
           WHEN GRUPO.COD_GRUPO = 9 THEN 4                                     -- 4 Receitas
           WHEN LANCAMENTO.COD_CATEGORIA = 48 THEN 5                           -- 5 Faturas
           ELSE 3 END                                                          -- 3 Despesas Gerais
        ) AS COD_TIPO
         
     , CASE WHEN (LANCAMENTO.COD_PARCELA IS NOT NULL) 
          THEN CATEGORIA_PARCELA.NOM_CATEGORIA 
            WHEN (LANCAMENTO.COD_CARTAO_CREDITO IS NOT NULL) 
              THEN CONCAT(CATEGORIA.NOM_CATEGORIA, ' (', CARTAO_CREDITO.NOM_BANDEIRA, ' - ', CARTAO_CREDITO.NOM_CARTAO_CREDITO, ')') 
            ELSE CATEGORIA.NOM_CATEGORIA 
       END AS DES_CATEGORIA
     , PARCELA.NUM_PARCELA 
     , AGENDAMENTO.NOM_AGENDAMENTO 
     , LANCAMENTO.DAT_LANCAMENTO 
     , LANCAMENTO.DAT_REFERENCIA 
     , LANCAMENTO.VAL_PREVISTO 
     , (CASE WHEN ISNULL(LANCAMENTO.COD_CARTAO_CREDITO) THEN LANCAMENTO.VAL_LANCAMENTO ELSE LANCAMENTO.VAL_PREVISTO END) AS VAL_PAGO
   
   
FROM TB_LANCAMENTO LANCAMENTO 

  INNER JOIN TB_CATEGORIA CATEGORIA ON CATEGORIA.COD_CATEGORIA = LANCAMENTO.COD_CATEGORIA
  
  INNER JOIN TB_GRUPO GRUPO ON GRUPO.COD_GRUPO = CATEGORIA.COD_GRUPO
  
  LEFT JOIN TB_AGENDAMENTO AGENDAMENTO ON AGENDAMENTO.COD_AGENDAMENTO = LANCAMENTO.COD_AGENDAMENTO
  
  LEFT JOIN TB_PARCELA PARCELA ON PARCELA.COD_PARCELA = LANCAMENTO.COD_PARCELA
  
  LEFT JOIN TB_LANCAMENTO LANCAMENTO_PARCELA ON LANCAMENTO_PARCELA.COD_LANCAMENTO = PARCELA.COD_LANCAMENTO
  
  LEFT JOIN TB_CATEGORIA CATEGORIA_PARCELA ON CATEGORIA_PARCELA.COD_CATEGORIA = LANCAMENTO_PARCELA.COD_CATEGORIA
  
  LEFT JOIN TB_GRUPO GRUPO_PARCELA ON GRUPO_PARCELA.COD_GRUPO = CATEGORIA_PARCELA.COD_GRUPO
  
  LEFT JOIN TB_CARTAO_CREDITO CARTAO_CREDITO ON CARTAO_CREDITO.COD_CARTAO_CREDITO = LANCAMENTO.COD_CARTAO_CREDITO
  
   



ORDER BY LANCAMENTO.DAT_REFERENCIA, DES_CATEGORIA, LANCAMENTO.COD_LANCAMENTO;





/*--------------------------------------------------------------
| CARGA
--------------------------------------------------------------*/

SET CHARACTER_SET_CLIENT = LATIN1;
SET CHARACTER_SET_RESULTS = LATIN1;
SET CHARACTER_SET_CONNECTION = LATIN1;

INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 1, 'Moradia');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 2, 'Despesas');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 3, 'Transporte');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 4, 'Saúde e Cuidados');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 5, 'Educação');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 6, 'Lazer');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 7, 'Obrigações Financeiras');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 8, 'Compras Diversas');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES( 9, 'Receitas');
INSERT INTO TB_GRUPO(COD_GRUPO, NOM_GRUPO) VALUES(10, 'Dependentes');



INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 1, 1, 'Aluguel');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 2, 1, 'Condomínio');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 3, 1, 'Água');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 4, 1, 'Energia Elétrica');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 5, 1, 'Gás');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 6, 1, 'Telefone');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 7, 1, 'Internet');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 8, 1, 'TV a Cabo');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES ( 9, 1, 'Manutenção');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (10, 1, 'Impostos e Taxas');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (11, 1, 'Seguro');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (12, 2, 'Supermercado');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (13, 2, 'Açougue');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (14, 2, 'Padaria');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (15, 2, 'Feira');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (16, 2, 'Restaurantes');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (17, 2, 'Outros');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (18, 3, 'Combustível');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (19, 3, 'Transporte Escolar');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (20, 3, 'Manutenção');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (21, 3, 'Impostos e Taxas');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (22, 3, 'Seguro');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (23, 3, 'Lavagens');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (24, 3, 'MULTAS');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (25, 3, 'Outros');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (26, 3, 'Estacionamentos');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (27, 4, 'Plano de Saúde');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (28, 4, 'Farmácia');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (29, 4, 'Consultas sem Plano de Saúde');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (30, 4, 'Outros');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (31, 5, 'Escola');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (32, 5, 'Faculdade');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (33, 5, 'Curso');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (34, 5, 'Material Escolar');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (35, 5, 'Livros');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (36, 6, 'Academia');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (37, 6, 'Jornais e Revistas');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (38, 6, 'Cinema e Passeios');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (39, 6, 'Viagens');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (40, 6, 'Shows e Eventos');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (41, 7, 'Pagamento de Serviços');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (42, 7, 'Aplicação em fundos');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (43, 7, 'PGBL');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (44, 7, 'Poupança');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (45, 7, 'Cartões de Crédito');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (46, 7, 'Pagamento de Parcela');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (47, 7, 'Financiamento');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (48, 7, 'Pagamento de Fatura');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (49, 7, 'Pagamento de Serviços');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (50, 7, 'Quitação');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (51, 7, 'Empréstimo');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (52, 8, 'Vestuário');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (53, 8, 'Outros');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (54, 8, 'Informática e Games');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (55, 8, 'Eletro Eletrônico');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (56, 8, 'Ferramentas');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (57, 9, 'Salário');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (58, 9, 'Bolsas');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (59, 9, '13º Salário');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (60, 9, 'Férias');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (61, 9, 'Retirada de Poupança');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (62, 9, 'Retirada de Aplicações');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (63, 9, 'Empréstimos');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (64, 9, 'Outros');

INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (65, 10, 'Escola/Faculdade');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (66, 10, 'Cursos');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (67, 10, 'Material Escolar');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (68, 10, 'Esportes/Uniformes');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (69, 10, 'Mesada');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (70, 10, 'Passeios/Férias');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (71, 10, 'Vestuário');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (72, 10, 'Saúde/Medicamentos');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (73, 10, 'Outros');
INSERT INTO TB_CATEGORIA(COD_CATEGORIA, COD_GRUPO, NOM_CATEGORIA) VALUES (74, 10, 'Pensão Alimentícia');



INSERT INTO TB_PERIODO(NUM_PERIODO, NOM_PERIODO) VALUES ( 1, 'Mensal');
INSERT INTO TB_PERIODO(NUM_PERIODO, NOM_PERIODO) VALUES ( 2, 'Bimestral');
INSERT INTO TB_PERIODO(NUM_PERIODO, NOM_PERIODO) VALUES ( 3, 'Trimestral');
INSERT INTO TB_PERIODO(NUM_PERIODO, NOM_PERIODO) VALUES ( 6, 'Semestral');
INSERT INTO TB_PERIODO(NUM_PERIODO, NOM_PERIODO) VALUES (12, 'Anual');
